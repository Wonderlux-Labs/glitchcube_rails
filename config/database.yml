# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: <%= ENV.fetch("DATABASE_USERNAME") { "postgres" } %>
  password: <%= ENV.fetch("DATABASE_PASSWORD") { "postgres" } %>
  host: <%= ENV.fetch("DATABASE_HOST") { "localhost" } %>
  port: <%= ENV.fetch("DATABASE_PORT") { 5432 } %>

development:
  <<: *default
  database: glitchcube_rails_development
  cache:
    <<: *default
    database: glitchcube_rails_development_cache
    migrations_paths: db/cache_migrate

test:
  <<: *default
  database: glitchcube_rails_test
  cache:
    <<: *default
    database: glitchcube_rails_test_cache
    migrations_paths: db/cache_migrate

production:
  primary:
    <<: *default
    database: glitchcube_rails_production
    username: <%= ENV.fetch("DATABASE_USERNAME") { "postgres" } %>
    password: <%= ENV.fetch("DATABASE_PASSWORD") { "" } %>
    host: <%= ENV.fetch("DATABASE_HOST") { "localhost" } %>
    port: <%= ENV.fetch("DATABASE_PORT") { 5432 } %>
  cache:
    <<: *default
    database: glitchcube_rails_production_cache
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: glitchcube_rails_production_queue
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: glitchcube_rails_production_cable
    migrations_paths: db/cable_migrate
