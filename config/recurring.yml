default: &default
  conversation_timeout_monitor:
    class: Recurring::System::ConversationTimeoutMonitorJob
    schedule: every minute
    queue: default


  weather_forecast_update:
    class: Recurring::Content::WeatherForecastSummarizerJob
    schedule: "0 * * * *"     # Every hour at the top of the hour
    queue: default

  conversation_summarizer:
    class: Recurring::System::Summaries::ConversationSummarizerJob
    schedule: "*/30 * * * *"  # Every 30 minutes
    queue: default

  goal_monitor:
    class: Recurring::Persona::GoalMonitorJob
    schedule: "*/5 * * * *"   # Every 5 minutes
    queue: default


  daily_summarizer:
    class: Recurring::System::Summaries::DailySummarizerJob
    schedule: "0 3 * * *"     # Daily at 3 AM
    queue: default

  summary_consolidation:
    class: Recurring::System::Summaries::SummaryConsolidationJob
    schedule: "30 2 * * *"    # Daily at 2:30 AM (before daily summarizer)
    queue: default

production:
  <<: *default
  
  # Production-specific jobs
  clear_solid_queue_finished_jobs:
    command: "SolidQueue::Job.clear_finished_in_batches(sleep_between_batches: 0.3)"
    schedule: every hour at minute 12

  random_persona:
    class: Recurring::Persona::RandomPersonaJob
    schedule: "*/5"
  gps_sensor_update:
    class: Recurring::System::GpsSensorUpdateJob
    schedule: "*/5 * * * *"   # Every 5 minutes
    queue: default

  host_registration:
    class: Recurring::System::HostRegistrationJob
    schedule: "*/5 * * * *"   # Every 5 minutes
    queue: default

development:
  <<: *default
  
  # Development-specific overrides (faster intervals for testing)
  gps_sensor_update:
    class: Recurring::System::GpsSensorUpdateJob
    schedule: "*/3 * * * *"   # Every 3 minutes in dev (faster)
    queue: default

  host_registration:
    class: Recurring::System::HostRegistrationJob
    schedule: "*/3 * * * *"   # Every 1 minute in dev (faster)
    queue: default
