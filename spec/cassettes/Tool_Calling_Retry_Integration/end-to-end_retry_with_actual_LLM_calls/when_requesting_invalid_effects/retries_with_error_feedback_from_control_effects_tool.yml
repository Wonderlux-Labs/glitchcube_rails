---
http_interactions:
- request:
    method: post
    uri: https://openrouter.helicone.ai/api/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"You are a technical tool execution
        service. Your job is to translate natural language intent into precise tool
        calls.\n\nUSER INTENT: Turn on the cosmic rainbow UFO strobe effect\n\nCONTEXT:
        {\"persona\":\"jax\"}\n\nIMPORTANT RULES:\n- Use EXACT parameter names from
        tool definitions\n- Make the precise tool calls needed to fulfill the intent.\n-
        You are allowed to reason and guess if it isn''t obvious.\n- If you make errors
        you will be told them and should try to correct yourself\n- Pay attention
        to schemas.\n- Do your best! Burning Man depends on you!\n"},{"role":"user","content":"Execute
        this intent: Turn on the cosmic rainbow UFO strobe effect"}],"model":"openai/gpt-5-mini","temperature":0.1,"max_tokens":32000,"tools":[{"type":"function","function":{"name":"set_light_effect","description":"Set
        lighting effects on cube lights that support them","parameters":{"type":"object","properties":{"entity_id":{"type":"string","description":"Light
        entity to control","enum":["light.cube_voice_ring","light.cube_light_top","light.cube_inner"]},"effect":{"type":"string","description":"Effect
        name to apply"}},"required":["entity_id","effect"]}}},{"type":"function","function":{"name":"list_light_effects","description":"List
        available effects for cube lights","parameters":{"type":"object","properties":{"entity_id":{"type":"string","description":"Light
        entity to check for available effects","enum":["light.cube_voice_ring","light.cube_light_top","light.cube_inner"]}},"required":["entity_id"]}}},{"type":"function","function":{"name":"get_light_state","description":"Get
        current state, brightness, color, and available effects of cube lights. Shows
        all possible effects that can be set.","parameters":{"type":"object","properties":{"entity_id":{"type":"string","description":"Light
        entity to check","enum":["light.cube_voice_ring","light.cube_light_top","light.cube_inner"]}},"required":["entity_id"]}}},{"type":"function","function":{"name":"set_light_state","description":"Unified
        control for cube lights: turn on/off, set brightness, color, and transitions","parameters":{"type":"object","properties":{"entity_id":{"type":"string","description":"Light
        entity to control","enum":["light.cube_voice_ring","light.cube_light_top","light.cube_inner"]},"state":{"type":"string","description":"Turn
        light on or off pass on even if on to change state","enum":["on","off"]},"brightness":{"type":"number","description":"Brightness
        percentage (0-100)","minimum":0,"maximum":100},"rgb_color":{"type":"string","description":"RGB
        color as comma-separated string ''R,G,B'' values (0-255). Example: ''255,0,0''
        for red, ''0,255,0'' for green"},"transition":{"type":"number","description":"Transition
        time in seconds for smooth changes","minimum":0,"maximum":60}},"required":["entity_id","state"]}}},{"type":"function","function":{"name":"display_notification","description":"Display
        text notification on the Awtrix matrix display via MQTT script","parameters":{"type":"object","properties":{"text":{"type":"string","description":"Text
        message to display on the matrix"},"duration":{"type":"number","description":"How
        long to display the message in seconds (default: 30)","minimum":1,"maximum":60},"color":{"type":"string","description":"hex
        code ie #ff0000 for red (defaults yellow but recommended)"},"wakeup":{"type":"boolean","description":"wakeup
        screen if asleep (default true)"},"rainbow":{"type":"boolean","description":"rainbow
        text! (default false)"}},"required":["text"]}}},{"type":"function","function":{"name":"play_music","description":"Play
        music on the Cube''s jukebox with fuzzy search - can search by song, artist,
        or any combination","parameters":{"type":"object","properties":{"media_id":{"type":"string","description":"REQUIRED:
        The song you want to play - fuzzy search works, so can do ''Watermelon Man
        by Herbie Hancock'' or ''Nirvana - Teen Spirit''. The more precise the better."},"artist":{"type":"string","description":"Optional:
        Artist name to narrow down search results if getting funny results"},"album":{"type":"string","description":"Optional:
        Album name to further narrow down search if needed"},"enqueue":{"type":"string","description":"Queue
        mode: ''play'' (force play now), ''replace'' (replace queue and play), ''next''
        (add after current), ''replace_next'' (default), ''add'' (end of queue)","enum":["play","replace","next","replace_next","add"]}},"required":["media_id"]}}},{"type":"function","function":{"name":"control_effects","description":"Control
        brief environmental effects like fan, strobe lighting, blacklight, and siren
        (all auto-toggle off)","parameters":{"type":"object","properties":{"effect":{"type":"string","description":"Effect
        to control","enum":["fan","strobe","blacklight","siren"]},"action":{"type":"string","description":"Action
        to perform (on/off/toggle)","enum":["on","off","toggle"]}},"required":["effect","action"]}}},{"type":"function","function":{"name":"make_announcement","description":"Make
        spoken announcements using music_assistant with persona voice and optional
        Awtrix display","parameters":{"type":"object","properties":{"message":{"type":"string","description":"Message
        to speak aloud"},"display_text":{"type":"string","description":"Optional text
        to display on Awtrix matrix (if different from spoken message)"},"volume":{"type":"number","description":"Volume
        level for announcement (0-100)","minimum":0,"maximum":100},"voice":{"type":"string","description":"Voice
        to use (will default to current persona voice)"}},"required":["message"]}}},{"type":"function","function":{"name":"mode_control","description":"Control
        special operational modes of the Cube (emergency, stealth, theme song)","parameters":{"type":"object","properties":{"mode":{"type":"string","description":"Mode
        to control","enum":["emergency_mode","stealth_mode","play_theme_song"]},"action":{"type":"string","description":"Action
        to perform","enum":["activate","deactivate","toggle"]}},"required":["mode","action"]}}}],"tool_choice":"auto"}'
    headers:
      Authorization:
      - Bearer <OPENROUTER_API_KEY>
      Content-Type:
      - application/json
      X-Title:
      - OpenRouter Ruby Client
      Http-Referer:
      - https://github.com/OlympiaAI/open_router
      Helicone-Auth:
      - Bearer sk-helicone-3ecehsq-ix6eiiy-x4kivhi-rxz2hoa
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 21 Aug 2025 10:51:44 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 972993a53badad20-MSP
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding
      Helicone-Id:
      - 496c8043-cd40-4740-b23c-c2d0ec9839e2
      Helicone-Status:
      - success
      Permissions-Policy:
      - payment=(self "https://checkout.stripe.com" "https://connect-js.stripe.com"
        "https://js.stripe.com" "https://*.js.stripe.com" "https://hooks.stripe.com")
      Referrer-Policy:
      - no-referrer, strict-origin-when-cross-origin
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
    body:
      encoding: ASCII-8BIT
      string: "\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n{\"id\":\"gen-1755773502-sH1sAW1padIXNSO1O9bG\",\"provider\":\"OpenAI\",\"model\":\"openai/gpt-5-mini\",\"object\":\"chat.completion\",\"created\":1755773502,\"choices\":[{\"logprobs\":null,\"finish_reason\":\"tool_calls\",\"native_finish_reason\":\"completed\",\"index\":0,\"message\":{\"role\":\"assistant\",\"content\":\"\",\"refusal\":null,\"reasoning\":null,\"tool_calls\":[{\"id\":\"call_O7tU4eqfOLMoQIebfITJojRl\",\"index\":1,\"type\":\"function\",\"function\":{\"name\":\"set_light_effect\",\"arguments\":\"{\\\"entity_id\\\":\\\"light.cube_light_top\\\",\\\"effect\\\":\\\"cosmic_rainbow_ufo\\\"}\"}},{\"id\":\"call_Xkx7ekM3VO8PUx53Y9oiNR3G\",\"index\":2,\"type\":\"function\",\"function\":{\"name\":\"set_light_effect\",\"arguments\":\"{\\\"entity_id\\\":\\\"light.cube_inner\\\",\\\"effect\\\":\\\"cosmic_rainbow_ufo\\\"}\"}},{\"id\":\"call_nWskhh5niaSI6FjRLshwtudF\",\"index\":3,\"type\":\"function\",\"function\":{\"name\":\"set_light_effect\",\"arguments\":\"{\\\"entity_id\\\":\\\"light.cube_voice_ring\\\",\\\"effect\\\":\\\"cosmic_rainbow_ufo\\\"}\"}},{\"id\":\"call_zVN2AAeh5PslcAK7yOhOc0N0\",\"index\":4,\"type\":\"function\",\"function\":{\"name\":\"control_effects\",\"arguments\":\"{\\\"effect\\\":\\\"strobe\\\",\\\"action\\\":\\\"on\\\"}\"}}],\"reasoning_details\":[{\"type\":\"reasoning.encrypted\",\"data\":\"gAAAAABopvpVeJqYDTQdngiHEFWnQ7AEfw4-taNeXbJTwjfMr2XZ4sjrd1x-c9tDHkb7ysUBneGn3sxnG21h7GqcN3gKd7GMCi3vWbVQKEZTEqsP72W24DuXDVFu1k_AoR46EHg1R0-xAKfqaVVa8RghZ958SFK1WVkNCCuO9Bzi0FnxRI0oUZ1EitKV08kWtmMKmcoqyo8zyfFZ_ZAmVWdhVeLmZan_C4JtPHY8MK8Nh67L1pikhIBcwOKm3aMh04vw8lDy14Ho-pTSQOZrveB_OB1nTUrw0OLTu-OVfDf0ELVxQqJyAc9WpJ82BsLjarI5YOBsKA86Z8aWs6DP_STh14WQys42g8BDMPVpczS4KpnPImlIXqBJ0lW-_3IBq4fMiARuXYgCFNmUuUc1tzmHsra7jctk100mi5Be12EvZBg_v0lQ219VDDx6zjPcGMluraoLEwLQWZX2Gt1TA5dXe_Pl7_1ZYjtawSB206rxzmoqzVQEwORavbhaVrtX_12iqdtC_5dxvyVnyyVtJ4t0PSBvXaUokI8w4IYUGo0b2JXuwOwtiVmtIq5tBw7XmRXmb_SNVdppHaX763Jo0wshd20EQJ3QsHZXcWnGJe5Shzfb0tyl_FVXDUTBQkWINf6rCgagKxfmzuev8HF4_LJIoOvJPJviazZABRHKpawomq10WpN8FOL8Wa1JUwLJ4Bs-qCkXKtekLIvXNgsKSzQO0ZbCf2KhKX9_Ted6xE7-0jEGYPuL8Zbm9nYpYDrRUEvRDgGg8cn1DbgtwSlWKLSdiZDBwMnhiSAj-NNrds34DKLU28zibEZs7cMo8mkV4WJ6rB5-UsEb-vjwMkTkBaq7VqUtLZah048C1NCM12W4fMxoeXK4ZV5ffbVQQD2B_kwqby4mpELAc_1Z2W-7YNKbqpWosdsVXaYpjxT_po6P5Xpp-f6gMKG3ZNGMVgTxnglmQXm8UhcbMEyJ9diKA3J30mTrzW7grvPsEbhkb_Un2j_vEd-H31_fbih36jl9XLjshn_IsRti84717CopRiwKw2MMcD-M2uBArrxpMGImDS5dIwmfp0O-r_h59dyUtIIcq_2AxYQ5sXz0R67j4OKvqURkUXWaiJtP5CaU-0G5ZV2T9MpVdWnRafKw5VwjiPFR5QMs2r95briEc6zAkJC1_4UFZB_3rhQJ9BN1DyR4pV_pKMNGRq-GpTPXEwEA_PeZ5Mu9U7i_O4qkPIMIenMjyxhDD4yg7rJ490DnTfa1cRy1VNAN6SiKm9MZufXFxQ2G3cWazsmLjSSdlTpDUWpEwUn7JOBBSHWVQY7XTeICJCORZ0hIPdxbwHBMmBriXOB-BiCtjyA2F1O5KJpeOQxm38QG18Dgz0ORZ_IzDqwuVaJBHDi3KfwqhWpvkwXvD4muL65fF9JjnWKJG75SciNkrqZ1LR4Xs1ZdQIArSEy4DBfN4G55wX83RU553tRIcyYItzCbPUFOrndyQ-XDfxD4xf-Glv30KLYEnFUoszJdsB1p4i5u3R9hM_KsfH2fAqT8SoNsezAkMy6QO9_9BRPGSArGsK7YiuOerfxJ1H0dPPTZt1XBdc4ocNcoDA0DljstM1rd3omPoSHEeHga0_Bv6rcZTu10bv2u18Mbg688qFFDtr5tH4vJ2jGU__4CVKaJLNbjSjK2Ydh0oNxgZlSrFVwF8OzscFkRbBIvlutXYeiNpWIYrDD0qyFHruVcTWeankFmKJf2HXuoTwNBFkI_IwqkmDbA0hw6VWSkEv6idt1DD_UR2D7lrPO1Psjvq5RyCR5GORV7Xc5nEAmVmrzpArqBJjkS_128rT4oJsGNjT8Yg1uUUFBWhu178U2j78G4XVqzOHpP5xgi39yP0RxVYv61uKYVnOFfBqU2tmBlBRJX365-kW2B-B4hgMR_sXLDQI1WVeHko6XsLi_em4X13zPCYwKu0eXz9QcqP-P079l03i4ouruk_cYpWI_kZCJy8tXLjvxDNbcW5Om9Psv_jdKrKd0me87CvPhF343HZoDE4huiZ5KZoNUlgAZvt3CqtjN82WEw7EyXaclbmyY9xWUyzTtMFFZuT5SnYLD2TT0Rs_bf3qkJtWmsZ3JcyAwT6y-GIWo1Emn1jgM_jtRtP54FeetcGzrOoGLYxsWSMzJXTQ7XslhaC3ENlwB_vgkfi1Y9XQWL2fJqjlxRV3cmHUOHSe_kEaWnY_9HfVhB0VhX3Zd6boBmWR5M-3viz6bYtMXluPJZnGZhgy_dH0WbaOpUbKNvqX1-hC7ynsVPzt1OnUvcGV8qW5ANDZht4k3DnOVcwPMLufTzCtMUqiAgSfq83Dnw9a8aDNGGLnxLvgIVii2HDq1G5c09pH6No32EjPpKiPvQrsm2e5gX43TvvcLdLhbH5ZQf1tDSTxBBroK3IwtSm4UH25LN6lvZk_75aAdvMPOWhtaD1omixKMn3OWUPLj83k_ykQIxA1HkFueApPEXatrzrrIegQMX4TPbGHrvMClBZthv3otSZ7HZtTzUe2hLBj0S42kJBaDTOtIgRVcPNLznx4EoFGU8E2aOjSG9tEbWQ5vIybdWb14s4mSd8KmpK2-GCkRz0mOeKF5marJ-ywjAVz8OHSjQ-m_e-ETjdNxmdfFXpFJ8AqGAG8DkUSLN9l9VZXtweixwijYSDPoTgp3BdOVQn9onLlJItCG0lCraMnAGKGD91HxUmglrFWJOLYCDkrzP5XrnzOQhCwWXD5fl4xvb6yGvQSDcKrLSMKsePoQmMpLqshUXCh2l6ifmjBwVoUfZ7CJnjHfylL_cEf9_HaLPXdro-s199vDvdqp-1HeQFTjCYzCG2V8m8WbmyC2-IhE27adzjomeYNq7Bom5ZTUMw-ZBy4BNhgvodxapcQMJ1TzMD9GHZHGpitMYBC6s79-FOc7ofMk4fXbclL3oniZ9D82BXlOmdiFasBbXW-aOoyoAWn9MhwNXHdAgcwzJpFqQCoNgnP9lIVCenUhWu_Xgx1R1CP1BscwqUAAgD9kDYOFbuTGouXIcFv38qtLlmPz7QOhuHPNpNnc1q0pCee7EwYgxBvJFzkfkXJL7Xh81S9dZBcj-CtwqSClqPNdcPYEEUEEjvN2m1277gXOn6d2ijKV2xB7sO6LTT7FsZ8VxmyTCzA4qeGMbdtvZKEt3DBG9Vm4NvrlzUCM-rXMu9sk1xdedsCdD82aZhwC5UNDqt94DAiVXOs-CtwPrSm3G_BMpVoD7E1Kg4HucietemSWgBvVlEBmmI0IaoKcamjMKmdSSbCYKI2qoDeEJ1sFjOef_UonyHo4S6swssnS0t7yw8ECn4uuLPfaSSsbfyuohWYgkKN4Nqa1KDrlX37IAEo6_Q2y7nlfeVUq2Udyb0mr3VQz_a3F8AYUMNKxisvPtz63aQqTNICQBpWr73b9gwWWQeIJqzdeZpHk8DwmyWJl0aTdJ5oKTQD1m9IpM2ZaMuYIoF8nZiFYEViLQ8UHyBLRloPgF3bClh1LJ9Y1STuRYV771seoD4mVCEXePosF-ELOhw8VDDTzWynfEcfLaeiz2OmE-bwfAC8FpiEz8158ts_rDON9fEiOWUYsvft2vCLTsERXBhNXh6QuH4iAjlLXGnNsHgR8QMX2sFp6Odi5Z-Lx5fpcFlxm9hjx_dox282SgCV8S-6JHqS7I6II9pwcun72n95XtDMFpsyHj8vLL1j1bI_FxMgxiStwPdYmvO6nAId3AspTh2wXjzwk1f5TIL7H_Er6B_Y9K51T4ALkOzOK5UX795gnck9b8k-W_UHiG5kil8uOnOs8v37R2wV_GvNwHMaw1hgnRC3AIKTr7PiiZYkbfKAahcapLF_zjQb3pALx_T8cSfFiuHVIJ6T4VcAvgwLhRyMu3zqxsplBhoyZxvB-xG5ZwJwOCfjR-TGSr31r46m-Q0npY2x4g3g6qkslvcgSn1_TvidPb6HEMeA25dMkrXDf3KdvyQjNGsk3Qp4Q-CM3QwQP6yP31zzD9YJs2Hoiu7CuRmSWxovdXPznY3CHuWOu20Qyxw8l2PwTvZlMeX9U-N_w9ePgHUTUqLQlQkxd_qvtnBZwx66rE-j7QJ1DHBz28ixCONtrdsOREiznSIW0SY0tQsSPmNJa7Vaq4bbXeC7kYpSKNMcJpqTZ4yo4jb2jsQJ4CWlb8NtfCnmEn9aU2hjzlb1LgnOERki-rVd14trgIXLF6U95027ZfGg_Cq8e7cDbxaNiccyzlY9FdaMYB5iKPWOnp0RhNnr6noO_iLtVPmC41gcQr1dtK2QWfT8Eoy7Kz669j-YiYUVj2rfnPjJTkI6YlcDSYaTlO_E9eitTOcV08PQ-MokRp-gIBbZ8sHp3bAsTQQUsSp9IV3nnvswhBhACCCzOR7tPyKT2r38wxQf_LTZ1K2Gzk5ujzaq-SW7FVccNmPfCNOgA5hVkFkz8FBuER--7OWtZufujm7Efjiuq-lgUk3FRC9JYA09gQ4dHcR5Nb2AsF0drLILuBOhSXcT8EHWWYBNqnM6E8mFzPaGAFvDcmaNhwu4LnNK2sINlyxPnYCaus0mOvtkjgBjiBCC3FjKldoPn2-MVFZk6DFx5jrhK3JWAP0qUzRFaYMbhpGUgra8eZOw4_Fq92L9K37CDxd-3lrBLJh2O_HnO4U69o68I2XwwaM3AFCuhmMihWDceIJQ92sfpuEdh3LUT3BCWQ5nR82SIoE2ODe3My-o3u91wM4gLlNpeFxNj0qAAZnGkUDUOEIHVPnO4ze2FSDLJ1D-UWuTuwYk9yL85KD07a3flpkg_FP91tyjLcGUQvdQrhh034JCdZBaaXpERudRdc8cNvWGjHvjDoSxNdCNLh_KjXRXZu8RXqpOLnEBkDpdQVroixUtYA7UvExw4_-w9Ukw0VU9ctz2BqVs1xT8qqz6Xav6tVLIHxjDJPMRxofoMGPItkFU1Ov6HL65O8a5mo2A4DZZ2GuzCYET-pGHkwm1gIw0dS4ERqZxOK3eAh7fEdzvYorG5ycdvZZvGcmKR5hKNorlAE9N6DLZktzJ462yRMi5Ce_oYgkAy_ON-_AQCsp4T_m02xrrQYPQ4lrPDm_PUmkS7izM-wPLKyFMwXv3PMlvJnZHi1bHGWPprsLdaV9R6uLiCViTpggZPioREbivv59ve1SDzTfxgGNplW0c5zKwORq7fp_bc8EUDpfPPVGP6A2M3Ns6TsE_OiSztMG0z9jEr8CWZ-qJCAoIP-4Kc2I4MiCvoppsrubF3M7a2siEMsTXP8d1dZHCNRLD7gZGZ0dcIRPfjwYaO9SMWMJCAKWhjtwQTs-YoMdikY1mmXvjlmQ1TmvNJMdnuveniiIKHOQqAnpDd3RD0LnV9AUHirI2VoLd3I0D2KE-AYUEk_QwHw5_hIDV1S1WyZeR2p7tyB11vZfCV6e3nzZeus9B6SB6qdjKANqN90sfW7WJQAeSVzQoxlKFaY61Xen0Im00at3wKg8YICcoEUNpDojDjA5k8RaNMrUhKlCkSCAOUq2oRnF1jgbVuIy5CNznQKaui693xxc0BQ2Cx2LDkp1bhUmoVWXTjMrmwCJwX5SIlXQGvzHGABOa-ttvHePo2-27eyMBb_eAvorWqgVt_r2ySBHvK0xO3nV9NOnOQjLrn9bfQK5BNju6QvVH0TEVmr9J64nIfyWMGetHfv5V-D-Y-0IAqBafbmaOBZQWAK10zbQf1TTmKO4mjz42JaFo-PnkR04kHmPK4mQByi1e8CihoVo8xPdxGIrK2jERPX3FSxo-CeXiYp0002m-adX__JTk22NAyhkHyx_oFIU7TgcFT0DGJFty04LN-Y8n4jBgk6yXMZ56depvLOsVYM0rsK-nXMyt6_LZis_MHf4sB6WaZ8lwpCuZEbq11SBHQCuoCR3dhoJokjDsQN5yuj6DDhd2DnKIvAoST7ja6XhEDJNCTK5P2D92-lqsg8esrl9LLTBPnlAt6hcsv4rjDeXx_3NxRbxjAiPlN0HugIjSRYtGuUfytJwfXJDTnssepYDwYhysj-YtTD6zM4smoWGXixyJ4ZqDv2l-R1-XCFiVW3duvanre4S3JBjsE1Uno6vxN7hdAoGzrjSW3jcu-o_GutHCnaO1I5hHoU0ayivdvnWtOYIs6hGR4bbvylLDdFI0yTrQX07yWNjIk1cik21QP6oRE5cjCAOEpBvpE85awyk09zLwHohxH6fkpTqJEjhLvdf4BJOEniwgn8_yxkFOzWynZYN_n2dvjmiFJviypIKjxs1haxRw_3g6tXl9VR6A4rSJiu5HNmn7PQsa7oa1IsZ6xJewEk-AUo25JtC2n3GP9g2LiLfgguWIuNJ2-RNiWOmLlINY4WCQ-ki1Chq2llj9MRXCyIRShxeWUSaiOd7VUHefp3jVJeB7-OAtRy4qp4C9ljljX9AXfT7Jmk19p3zzFpyFTCxsu2NYQKUntXhWMLVVilh1XH2iH92cD2ZuHhLyNGPZ2qOc3-GE1LgjFY8OuiX5B6gpq3GvB92cWr6hFYL6sbKJ6gHvA3S5Gu\",\"id\":\"rs_68a6fa40a26c819685f34f69621f8d5e010c60fd3c2e818b\",\"format\":\"openai-responses-v1\",\"index\":0}]}}],\"usage\":{\"prompt_tokens\":1060,\"completion_tokens\":1024,\"total_tokens\":2084}}"
  recorded_at: Thu, 21 Aug 2025 10:52:09 GMT
recorded_with: VCR 6.3.1
