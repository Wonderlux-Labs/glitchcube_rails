---
http_interactions:
- request:
    method: post
    uri: https://openrouter.helicone.ai/api/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"You are a technical tool execution
        service. Your job is to translate natural language intent into precise tool
        calls.\n\nUSER INTENT: Turn on some super space desert UFO mode lighting effects\n\nCONTEXT:
        {\"persona\":\"jax\"}\n\nIMPORTANT RULES:\n- Use EXACT parameter names from
        tool definitions\n- Make the precise tool calls needed to fulfill the intent.\n-
        You are allowed to reason and guess if it isn''t obvious.\n- If you make errors
        you will be told them and should try to correct yourself\n- Pay attention
        to schemas.\n- Do your best! Burning Man depends on you!\n"},{"role":"user","content":"Execute
        this intent: Turn on some super space desert UFO mode lighting effects"}],"model":"openai/gpt-5-mini","temperature":0.1,"max_tokens":32000,"tools":[{"type":"function","function":{"name":"set_light_effect","description":"Set
        lighting effects on cube lights that support them","parameters":{"type":"object","properties":{"entity_id":{"type":"string","description":"Light
        entity to control","enum":["light.cube_voice_ring","light.cube_light_top","light.cube_inner"]},"effect":{"type":"string","description":"Effect
        name to apply"}},"required":["entity_id","effect"]}}},{"type":"function","function":{"name":"list_light_effects","description":"List
        available effects for cube lights","parameters":{"type":"object","properties":{"entity_id":{"type":"string","description":"Light
        entity to check for available effects","enum":["light.cube_voice_ring","light.cube_light_top","light.cube_inner"]}},"required":["entity_id"]}}},{"type":"function","function":{"name":"get_light_state","description":"Get
        current state, brightness, color, and available effects of cube lights. Shows
        all possible effects that can be set.","parameters":{"type":"object","properties":{"entity_id":{"type":"string","description":"Light
        entity to check","enum":["light.cube_voice_ring","light.cube_light_top","light.cube_inner"]}},"required":["entity_id"]}}},{"type":"function","function":{"name":"set_light_state","description":"Unified
        control for cube lights: turn on/off, set brightness, color, and transitions","parameters":{"type":"object","properties":{"entity_id":{"type":"string","description":"Light
        entity to control","enum":["light.cube_voice_ring","light.cube_light_top","light.cube_inner"]},"state":{"type":"string","description":"Turn
        light on or off pass on even if on to change state","enum":["on","off"]},"brightness":{"type":"number","description":"Brightness
        percentage (0-100)","minimum":0,"maximum":100},"rgb_color":{"type":"string","description":"RGB
        color as comma-separated string ''R,G,B'' values (0-255). Example: ''255,0,0''
        for red, ''0,255,0'' for green"},"transition":{"type":"number","description":"Transition
        time in seconds for smooth changes","minimum":0,"maximum":60}},"required":["entity_id","state"]}}},{"type":"function","function":{"name":"display_notification","description":"Display
        text notification on the Awtrix matrix display via MQTT script","parameters":{"type":"object","properties":{"text":{"type":"string","description":"Text
        message to display on the matrix"},"duration":{"type":"number","description":"How
        long to display the message in seconds (default: 30)","minimum":1,"maximum":60},"color":{"type":"string","description":"hex
        code ie #ff0000 for red (defaults yellow but recommended)"},"wakeup":{"type":"boolean","description":"wakeup
        screen if asleep (default true)"},"rainbow":{"type":"boolean","description":"rainbow
        text! (default false)"}},"required":["text"]}}},{"type":"function","function":{"name":"play_music","description":"Play
        music on the Cube''s jukebox with fuzzy search - can search by song, artist,
        or any combination","parameters":{"type":"object","properties":{"media_id":{"type":"string","description":"REQUIRED:
        The song you want to play - fuzzy search works, so can do ''Watermelon Man
        by Herbie Hancock'' or ''Nirvana - Teen Spirit''. The more precise the better."},"artist":{"type":"string","description":"Optional:
        Artist name to narrow down search results if getting funny results"},"album":{"type":"string","description":"Optional:
        Album name to further narrow down search if needed"},"enqueue":{"type":"string","description":"Queue
        mode: ''play'' (force play now), ''replace'' (replace queue and play), ''next''
        (add after current), ''replace_next'' (default), ''add'' (end of queue)","enum":["play","replace","next","replace_next","add"]}},"required":["media_id"]}}},{"type":"function","function":{"name":"control_effects","description":"Control
        brief environmental effects like fan, strobe lighting, blacklight, and siren
        (all auto-toggle off)","parameters":{"type":"object","properties":{"effect":{"type":"string","description":"Effect
        to control","enum":["fan","strobe","blacklight","siren"]},"action":{"type":"string","description":"Action
        to perform (on/off/toggle)","enum":["on","off","toggle"]}},"required":["effect","action"]}}},{"type":"function","function":{"name":"make_announcement","description":"Make
        spoken announcements using music_assistant with persona voice and optional
        Awtrix display","parameters":{"type":"object","properties":{"message":{"type":"string","description":"Message
        to speak aloud"},"display_text":{"type":"string","description":"Optional text
        to display on Awtrix matrix (if different from spoken message)"},"volume":{"type":"number","description":"Volume
        level for announcement (0-100)","minimum":0,"maximum":100},"voice":{"type":"string","description":"Voice
        to use (will default to current persona voice)"}},"required":["message"]}}},{"type":"function","function":{"name":"mode_control","description":"Control
        special operational modes of the Cube (emergency, stealth, theme song)","parameters":{"type":"object","properties":{"mode":{"type":"string","description":"Mode
        to control","enum":["emergency_mode","stealth_mode","play_theme_song"]},"action":{"type":"string","description":"Action
        to perform","enum":["activate","deactivate","toggle"]}},"required":["mode","action"]}}}],"tool_choice":"auto"}'
    headers:
      Authorization:
      - Bearer <OPENROUTER_API_KEY>
      Content-Type:
      - application/json
      X-Title:
      - OpenRouter Ruby Client
      Http-Referer:
      - https://github.com/OlympiaAI/open_router
      Helicone-Auth:
      - Bearer sk-helicone-3ecehsq-ix6eiiy-x4kivhi-rxz2hoa
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 21 Aug 2025 10:56:29 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 97299a9e99e4a1b9-MSP
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding
      Helicone-Id:
      - 441d2d68-45dd-4923-9ab9-baa069592c9a
      Helicone-Status:
      - success
      Permissions-Policy:
      - payment=(self "https://checkout.stripe.com" "https://connect-js.stripe.com"
        "https://js.stripe.com" "https://*.js.stripe.com" "https://hooks.stripe.com")
      Referrer-Policy:
      - no-referrer, strict-origin-when-cross-origin
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 21 Aug 2025 10:56:37 GMT
recorded_with: VCR 6.3.1
