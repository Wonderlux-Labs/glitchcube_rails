- id: '1755159655071'
  alias: Cube Light (voice)
  description: Voice assistant feedback lighting with scene restoration
  triggers:
  - trigger: state
    entity_id: assist_satellite.square_voice
    from: idle
    id: voice_activated
  - trigger: state
    entity_id: assist_satellite.square_voice
    to: listening
    id: listening
  - trigger: state
    entity_id: assist_satellite.square_voice
    to: processing
    id: processing
  - trigger: state
    entity_id: assist_satellite.square_voice
    to: speaking
    id: speaking
  - trigger: state
    entity_id: assist_satellite.square_voice
    to: idle
    for:
      seconds: 2
    id: voice_idle
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: voice_activated
      sequence:
      - action: scene.create
        data:
          scene_id: cube_voice_restore
          snapshot_entities:
          - light.cube_light
    - conditions:
      - condition: trigger
        id: listening
      sequence:
      - action: light.turn_on
        target:
          entity_id: light.cube_light
        data:
          rgb_color: '{{ listening_color }}'
          brightness_pct: 80
          transition: 0.3
  variables:
    listening_color:
    - 0
    - 255
    - 0
    processing_color:
    - 0
    - 0
    - 255
    speaking_color:
    - 128
    - 0
    - 128
  mode: parallel
- id: '1755164988353'
  alias: GPS - Current Cube Location
  description: ''
  triggers:
  - trigger: state
    entity_id: sensor.cube_current_location_text
  conditions:
  - condition: template
    value_template: "{{ trigger.to_state.state not in ['unknown', 'unavailable', ''] }}"
  actions:
  - action: input_text.set_value
    metadata: {}
    data:
      value: '{{ trigger.to_state.state }}'
    target:
      entity_id: input_text.current_location
  mode: single
- id: '1755313710558'
  alias: Persona Switcher
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - input_select.current_persona
    from:
    to:
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.current_persona
        state: jax
      sequence:
      - action: select.select_option
        data:
          option: JAX
        target:
          entity_id:
          - select.home_assistant_voice_09739d_assistant
          - select.esp32_s3_box_3_52b3dc_assistant
    - conditions:
      - condition: state
        entity_id: input_select.current_persona
        state: buddy
      sequence:
      - action: select.select_option
        data:
          option: BUDDY
        target:
          entity_id:
          - select.home_assistant_voice_09739d_assistant
          - select.esp32_s3_box_3_52b3dc_assistant
    - conditions:
      - condition: state
        entity_id: input_select.current_persona
        state: lomi
      sequence:
      - action: select.select_option
        data:
          option: LOMI
        target:
          entity_id:
          - select.home_assistant_voice_09739d_assistant
          - select.esp32_s3_box_3_52b3dc_assistant
    - conditions:
      - condition: state
        entity_id: input_select.current_persona
        state: zorp
      sequence:
      - action: select.select_option
        data:
          option: ZORP
        target:
          entity_id:
          - select.home_assistant_voice_09739d_assistant
          - select.esp32_s3_box_3_52b3dc_assistant
  mode: single
- id: '1755332428238'
  alias: Siren - Auto Off
  description: 'Auto turn off siren after 20 seconds'
  triggers:
  - trigger: state
    entity_id:
    - siren.small_siren
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 20
  conditions: []
  actions:
  - action: siren.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: siren.small_siren
  mode: single
- id: '1755332428239'
  alias: Fan - Auto Off
  description: 'Auto turn off fan after 1 minute'
  triggers:
  - trigger: state
    entity_id:
    - switch.fan_switch
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  conditions: []
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.fan_switch
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.fan_cooldown
  mode: single
- id: '1755332428240'
  alias: Strobe - Auto Off
  description: 'Auto turn off strobe after 30 seconds'
  triggers:
  - trigger: state
    entity_id:
    - switch.strobe_switch
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  conditions: []
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.strobe_switch
  mode: single
- id: '1755332428241'
  alias: Blacklight - Auto Off
  description: 'Auto turn off blacklight after 30 seconds'
  triggers:
  - trigger: state
    entity_id:
    - switch.blacklight_switch
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  conditions: []
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.blacklight_switch
  mode: single
- id: '1755332428242'
  alias: Fan Cooldown Clear
  description: 'Clear fan cooldown after 1 hour'
  triggers:
  - trigger: state
    entity_id:
    - input_boolean.fan_cooldown
    to: 'on'
    for:
      hours: 1
      minutes: 0
      seconds: 0
  conditions: []
  actions:
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.fan_cooldown
  mode: single
- id: '1755333596935'
  alias: Health - Lights Red
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.backend_health_check
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 15
  - trigger: state
    entity_id:
    - sensor.backend_health_check
    to: unknown
    for:
      hours: 0
      minutes: 0
      seconds: 15
  conditions: []
  actions:
  - action: light.turn_on
    metadata: {}
    data:
      rgb_color:
      - 99
      - 0
      - 0
      flash: long
    target:
      entity_id: light.cube_voice_ring
  - action: light.turn_on
    metadata: {}
    data:
      rgb_color:
      - 86
      - 0
      - 0
    target:
      entity_id: light.cart_light
  mode: single
- id: '1755333757049'
  alias: Health Healthy
  description: Health Healthy
  triggers:
  - trigger: state
    entity_id:
    - sensor.backend_health_check
    to: healthy
    for:
      hours: 0
      minutes: 0
      seconds: 15
    from: unavailable
  conditions: []
  actions:
  - action: light.turn_on
    metadata: {}
    data:
      rgb_color:
      - 0
      - 200
      - 0
      flash: long
    target:
      entity_id: light.cube_voice_ring
  - action: light.turn_on
    metadata: {}
    data:
      effect: twinkle
    target:
      entity_id: light.cart_light
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - action: light.turn_on
    metadata: {}
    data:
      brightness_pct: 100
      rgb_color:
      - 116
      - 0
      - 100
    target:
      entity_id: light.cart_light
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - action: light.turn_on
    metadata: {}
    data:
      effect: none
    target:
      entity_id: light.cart_light
  mode: single

- id: 'cycle_persona_automation'
  alias: "Cycle Persona Button"
  description: "Cycles through personas when button is pressed"
  triggers:
  - trigger: state
    entity_id: input_button.cycle_persona
  conditions: []
  actions:
  - action: rest_command.cycle_persona
  mode: single

# Motion Detection Auto-Reset
- id: 'motion_auto_reset'
  alias: "Motion Auto Reset"
  description: "Automatically reset motion detection after 30 seconds"
  triggers:
  - trigger: state
    entity_id: input_boolean.motion_detected
    to: 'on'
    for:
      seconds: 30
  conditions: []
  actions:
  - action: input_boolean.turn_off
    target:
      entity_id: input_boolean.motion_detected
  mode: restart

# Persona Change Light Flash
- id: 'persona_change_flash'
  alias: "Persona Change Flash"
  description: "Flash all lights when persona changes"
  triggers:
  - trigger: state
    entity_id: input_select.current_persona
  conditions:
  - condition: template
    value_template: "{{ trigger.from_state.state != trigger.to_state.state }}"
  actions:
  - action: scene.create
    data:
      scene_id: persona_flash_restore
      snapshot_entities:
      - light.cube_light
      - light.cube_voice_ring
      - light.cart_light
  - action: light.turn_on
    target:
      entity_id: 
      - light.cube_light
      - light.cube_voice_ring
      - light.cart_light
    data:
      flash: short
      rgb_color: >
        {% set persona = states('input_select.current_persona') %}
        {% if persona == 'buddy' %}
          [0, 200, 255]
        {% elif persona == 'jax' %}
          [255, 100, 0]
        {% elif persona == 'lomi' %}
          [255, 0, 200]
        {% elif persona == 'zorp' %}
          [100, 255, 0]
        {% elif persona == 'party_mode' %}
          [255, 0, 255]
        {% elif persona == 'chill_mode' %}
          [0, 100, 255]
        {% elif persona == 'guide_mode' %}
          [255, 255, 100]
        {% elif persona == 'demo_mode' %}
          [200, 200, 200]
        {% elif persona == 'maintenance_mode' %}
          [255, 165, 0]
        {% else %}
          [255, 255, 255]
        {% endif %}
      brightness_pct: 100
  - delay:
      seconds: 2
  - action: scene.turn_on
    target:
      entity_id: scene.persona_flash_restore
  mode: restart

# Low Battery Alert
- id: 'low_battery_alert'
  alias: "Low Battery Alert"
  description: "Alert when low battery is detected"
  triggers:
  - trigger: state
    entity_id: input_boolean.low_battery
    to: 'on'
  conditions: []
  actions:
  - action: light.turn_on
    target:
      entity_id: light.cube_voice_ring
    data:
      rgb_color: [255, 0, 0]
      flash: long
  - action: persistent_notification.create
    data:
      title: "Low Battery Warning"
      message: "System battery is low. Consider finding power."
      notification_id: low_battery_alert
  mode: single

# Cube Busy Indicator
- id: 'cube_busy_visual'
  alias: "Cube Busy Visual"
  description: "Show visual indicator when cube is busy"
  triggers:
  - trigger: state
    entity_id: input_boolean.cube_busy
    to: 'on'
  - trigger: state
    entity_id: input_boolean.cube_busy
    to: 'off'
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.cube_busy
        state: 'on'
      sequence:
      - action: light.turn_on
        target:
          entity_id: light.cube_light
        data:
          effect: "colorloop"
          brightness_pct: 50
    - conditions:
      - condition: state
        entity_id: input_boolean.cube_busy
        state: 'off'
      sequence:
      - action: light.turn_on
        target:
          entity_id: light.cube_light
        data:
          effect: "none"
  mode: restart

# AWTRIX Display Updates
- id: 'awtrix_persona_change'
  alias: "AWTRIX Persona Display"
  description: "Show persona change on AWTRIX display"
  triggers:
  - trigger: state
    entity_id: input_select.current_persona
  conditions: []
  actions:
  - service: awtrix.custom_app
    data:
      device: ac07cb1bceee39dce3af75aa6c6d784c
      app: persona
      text: "{{ states('input_select.current_persona').upper() }}"
      icon: "{% if states('input_select.current_persona') == 'buddy' %}2022{% elif states('input_select.current_persona') == 'jax' %}7956{% elif states('input_select.current_persona') == 'lomi' %}7919{% elif states('input_select.current_persona') == 'zorp' %}7982{% else %}7786{% endif %}"
      color: "{% if states('input_select.current_persona') == 'buddy' %}#00C8FF{% elif states('input_select.current_persona') == 'jax' %}#FF6400{% elif states('input_select.current_persona') == 'lomi' %}#FF00C8{% elif states('input_select.current_persona') == 'zorp' %}#64FF00{% else %}#FFFFFF{% endif %}"
      duration: 8
  mode: single

- id: 'awtrix_battery_alert'
  alias: "AWTRIX Battery Alert"
  description: "Show battery status on AWTRIX"
  triggers:
  - trigger: state
    entity_id: input_boolean.low_battery
  conditions: []
  actions:
  - service: awtrix.custom_app
    data:
      device: ac07cb1bceee39dce3af75aa6c6d784c
      app: battery
      text: "{% if states('input_boolean.low_battery') == 'on' %}LOW BAT{% else %}BAT OK{% endif %}"
      icon: "{% if states('input_boolean.low_battery') == 'on' %}184{% else %}183{% endif %}"
      color: "{% if states('input_boolean.low_battery') == 'on' %}#FF0000{% else %}#00FF00{% endif %}"
      effect: "{% if states('input_boolean.low_battery') == 'on' %}BlinkyRainbow{% endif %}"
      duration: 10
  mode: single

- id: 'awtrix_motion_alert'  
  alias: "AWTRIX Motion Alert"
  description: "Show motion detection on AWTRIX"
  triggers:
  - trigger: state
    entity_id: input_boolean.motion_detected
    to: 'on'
  conditions: []
  actions:
  - service: awtrix.custom_app
    data:
      device: ac07cb1bceee39dce3af75aa6c6d784c
      app: motion
      text: "MOTION"
      icon: 7876
      color: "#FFA500"
      effect: "ColorWipe"
      duration: 5
  mode: single

- id: 'awtrix_health_status'
  alias: "AWTRIX Health Status"  
  description: "Show system health on AWTRIX"
  triggers:
  - trigger: state
    entity_id: sensor.backend_health_check
  conditions: []
  actions:
  - service: awtrix.custom_app
    data:
      device: ac07cb1bceee39dce3af75aa6c6d784c
      app: health
      text: "{{ trigger.to_state.state.upper() }}"
      icon: "{% if trigger.to_state.state == 'healthy' %}4687{% else %}4688{% endif %}"
      color: "{% if trigger.to_state.state == 'healthy' %}#00FF00{% elif trigger.to_state.state == 'degraded' %}#FFFF00{% else %}#FF0000{% endif %}"
      duration: 8
  mode: single

- id: 'awtrix_conversation_counter'
  alias: "AWTRIX Conversation Update"
  description: "Show conversation count on AWTRIX"  
  triggers:
  - trigger: state
    entity_id: counter.daily_conversations
  conditions: []
  actions:
  - service: awtrix.custom_app
    data:
      device: ac07cb1bceee39dce3af75aa6c6d784c
      app: conversations
      text: "CHATS {{ states('counter.daily_conversations') }}"
      icon: 7929
      color: "#00FFC8"
      duration: 6
  mode: single
